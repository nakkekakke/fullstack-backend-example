{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","App_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","alert","value","onChange","console","log","target","type","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d778338.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important \n    ? \"Make not important\" : \"Make important\"\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science 2019</em>\n    </div> \n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll \n    ? notes \n    : notes.filter(note => note.important)\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`Muistiinpano \"${note.content}\" on jo valitettavasti poistettu palvelimelta`)\n        setTimeout(() => setErrorMessage(null), 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const rows = () => notesToShow.map(note => \n    <Note \n      key={note.id} \n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n      .catch(error => {\n        alert(`Muistiinpanon \"${noteObject.content}\" lisäys epäonnistui`)\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Muistiinpanot</h1>\n\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Näytä { showAll ? 'vain tärkeät' : 'kaikki' }\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">Tallenna</button>\n      </form>\n      <Footer />\n    </div>\n  ) \n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n"],"sourceRoot":""}