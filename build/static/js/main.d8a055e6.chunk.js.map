{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","baseUrl","services_notes","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","App_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","alert","value","onChange","console","log","target","type","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d8a055e6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important \n    ? \"Make not important\" : \"Make important\"\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = 'http://fast-tundra-50700.herokuapp.com/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'Tätä muistiinpanoa ei ole palvelimella',\n    date: '2017-12-10T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science 2019</em>\n    </div> \n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll \n    ? notes \n    : notes.filter(note => note.important)\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`Muistiinpano \"${note.content}\" on jo valitettavasti poistettu palvelimelta`)\n        setTimeout(() => setErrorMessage(null), 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const rows = () => notesToShow.map(note => \n    <Note \n      key={note.id} \n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n      .catch(error => {\n        alert(`Muistiinpanon \"${noteObject.content}\" lisäys epäonnistui`)\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Muistiinpanot</h1>\n\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Näytä { showAll ? 'vain tärkeät' : 'kaikki' }\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">Tallenna</button>\n      </form>\n      <Footer />\n    </div>\n  ) \n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n"],"sourceRoot":""}